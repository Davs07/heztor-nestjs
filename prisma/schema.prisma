// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String?
  firstName   String?
  lastName    String?
  imageUrl    String?
  clerkUserId String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Habit       Habit[]
}

model Habit {
  id          String  @id @default(cuid())
  name        String
  description String?
  userId      String
  user        User    @relation(fields: [userId], references: [id])
}


// model Habit {
//   id                 String           @id @default(cuid())
//   name               String
//   description        String?
//   category           Category?
//   priority           Priority?
//   comments           String[]
//   completedDays      CompletedDay[]
//   frequency          Frequency?        @relation(fields: [frequencyId], references: [id])
//   goal               Goal?             @relation(fields: [goalId], references: [id])
//   smartDescription   SmartDescription? @relation(fields: [smartDescriptionId], references: [id])
//   user               User             @relation(fields: [userId], references: [id])
//   userId             String
//   frequencyId        String?
//   goalId             String?
//   smartDescriptionId String?
// }

// model CompletedDay {
//   id           String   @id @default(cuid())
//   date         DateTime
//   completed    Boolean
//   otherDetails Json?
//   habitId      String
//   habit        Habit    @relation(fields: [habitId], references: [id])
// }

// enum Category {
//   Salud
//   Crecimiento
//   Relaciones
//   Desarrollo
//   Finanzas
// }

// enum Priority {
//   MuyAlta
//   Alta
//   Media
//   Baja
// }

// enum FrequencyType {
//   TodosLosDias
//   DiasEspecificos
//   CadaXdias
// }

// model Frequency {
//   id    String        @id @default(cuid())
//   type  FrequencyType
//   Habit Habit[]
// }

// model Goal {
//   id    String   @id @default(cuid())
//   type  GoalType
//   meta  Json
//   Habit Habit[]
// }

// enum GoalType {
//   SiNo
//   Cantidad
//   Cronometro
//   Subitems
// }

// enum Day {
//   Lunes
//   Martes
//   Miercoles
//   Jueves
//   Viernes
//   Sabado
//   Domingo
// }

// model SmartDescription {
//   id                            String  @id @default(cuid())
//   purposeAndMotivation          String
//   benefitsAndConsequences       String
//   currentHabitsAndEnvironment   String
//   capacityAndResources          String
//   possibleObstaclesAndSolutions String
//   Habit                         Habit[]
// }

// model Project {
//   id        String   @id @default(cuid())
//   title     String
//   userId    String
//   user      User     @relation(fields: [userId], references: [id])
//   columns   Column[] @relation(onDelete: Cascade)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Column {
//   id        String   @id @default(cuid())
//   title     String
//   projectId String
//   project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
//   tasks     Task[]   @relation(onDelete: Cascade)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Task {
//   id        String   @id @default(cuid())
//   title     String
//   columnId  String
//   column    Column   @relation(fields: [columnId], references: [id], onDelete: Cascade)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
